steps:

- task: UseDotNet@2
  displayName: 'Use defined .NET sdk'
  inputs:
    useGlobalJson: true

- task: CopyFiles@2
  displayName: 'Copy nuget.config from: ADO repo to Github repo'
  inputs:
    Contents: 'nuget.config'
    TargetFolder: '$(Build.SourcesDirectory)/sqltoolsservice/'
    Overwrite: true

- task: PowerShell@2
  displayName: 'Save STS commit hash into a build pipeline variable'
  inputs:
    targetType: 'inline'
    script: |
      pushd '$(Build.SourcesDirectory)/sqltoolsservice/'
      $sts_commit = git log -n 1 --pretty=format:"%H"
      echo "STS commit" 
      echo $sts_commit
      Write-Host "##vso[task.setvariable variable=StsSourceVersion;]$sts_commit"

- task: PowerShell@2
  displayName: 'Add version number to SqlCore project for packaging'
  inputs:
    targetType: 'inline'
    script: |
      $projectFile = '$(Build.SourcesDirectory)\src\Microsoft.SqlTools.SqlCore\Microsoft.SqlTools.SqlCore.csproj'
      $props = New-Object XML
      $props.Load($projectFile)
      $version = ($(Major)).ToString() + '.' + ($(Minor)).ToString() + '.' + $(Patch) + $(Build.BuildNumber);
      $props.Project.PropertyGroup.Version = $version;
      $props.Save($projectFile)

- script: call build.cmd -target=all -mono
  displayName: 'Run script build.cmd'
  workingDirectory: $(Build.SourcesDirectory)\sqltoolsservice

- task: DotNetCoreCLI@2
  displayName: 'dotnet test test/Microsoft.SqlTools.ServiceLayer.UnitTests'
  inputs:
    command: test
    projects: $(Build.SourcesDirectory)/sqltoolsservice/test/Microsoft.SqlTools.ServiceLayer.UnitTests
    testRunTitle: SqlTools.ServiceLayer.UnitTests
    arguments: '--configuration Release --collect "XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test test/Microsoft.Kusto.ServiceLayer.UnitTests'
  inputs:
    command: test
    projects: $(Build.SourcesDirectory)/sqltoolsservice/test/Microsoft.Kusto.ServiceLayer.UnitTests
    testRunTitle: Kusto.ServiceLayer.UnitTests
    arguments: '--configuration Release --collect "XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test test/Microsoft.SqlTools.Authentication.UnitTests'
  inputs:
    command: test
    projects: $(Build.SourcesDirectory)/sqltoolsservice/test/Microsoft.SqlTools.Authentication.UnitTests
    testRunTitle: SqlTools.Authentication.UnitTests
    arguments: '--configuration Release --collect "XPlat Code Coverage"'

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Agent.TempDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/coverlet/reports/Cobertura.xml'
