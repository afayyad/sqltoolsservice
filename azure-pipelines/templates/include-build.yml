steps:

# .NET Core 2.1 SDK is installed for ESRP Code signing task,
# ESRP currently uses DLL from this path: ~\1.9.111\netcoreapp2.1\esrpcli.dll (found in logs)
# Can be removed once ESRP codesigning task gets an upgrade and a newer SDK DLL is used.
- task: UseDotNet@2
  displayName: 'Use .NET Core 2 sdk'
  inputs:
    useGlobalJson: false
    version: 2.x

- task: UseDotNet@2
  displayName: 'Use defined .NET sdk'
  inputs:
    useGlobalJson: true

- task: PowerShell@2
  displayName: 'Add version number to SqlCore project for packaging'
  inputs:
    targetType: 'inline'
    script: |
      $projectFile = '$(Build.SourcesDirectory)\src\Microsoft.SqlTools.SqlCore\Microsoft.SqlTools.SqlCore.csproj'
      $props = New-Object XML
      $props.Load($projectFile)
      $version = ($(Major)).ToString() + '.' + ($(Minor)).ToString() + '.' + $(Patch) + $(Build.BuildNumber);
      $props.Project.PropertyGroup.Version = $version;
      $props.Save($projectFile)

- task: CodeQL3000Init@0
  displayName: 'CodeQL Initialize'
  condition: eq(variables['Codeql.enabled'], 'True')

- task: BatchScript@1
  displayName: 'Run script build.cmd'
  inputs:
    filename: build.cmd
    arguments: '-target=all -mono'
    
- task: DotNetCoreCLI@2
  displayName: 'dotnet restore test/Microsoft.SqlTools.ServiceLayer.UnitTests'
  inputs:
    command: restore
    projects: test/Microsoft.SqlTools.ServiceLayer.UnitTests

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore test/Microsoft.Kusto.ServiceLayer.UnitTests'
  inputs:
    command: restore
    projects: test/Microsoft.Kusto.ServiceLayer.UnitTests

- task: DotNetCoreCLI@2
  displayName: 'dotnet restore test/Microsoft.SqlTools.Authentication.UnitTests'
  inputs:
    command: restore
    projects: test/Microsoft.SqlTools.Authentication.UnitTests

- task: DotNetCoreCLI@2
  displayName: 'dotnet test test/Microsoft.SqlTools.ServiceLayer.UnitTests'
  inputs:
    command: test
    projects: test/Microsoft.SqlTools.ServiceLayer.UnitTests
    testRunTitle: SqlTools.ServiceLayer.UnitTests
    arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test test/Microsoft.Kusto.ServiceLayer.UnitTests'
  inputs:
    command: test
    projects: test/Microsoft.Kusto.ServiceLayer.UnitTests
    testRunTitle: Kusto.ServiceLayer.UnitTests
    arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage"'

- task: DotNetCoreCLI@2
  displayName: 'dotnet test test/Microsoft.SqlTools.Authentication.UnitTests'
  inputs:
    command: test
    projects: test/Microsoft.SqlTools.Authentication.UnitTests
    testRunTitle: SqlTools.Authentication.UnitTests
    arguments: '--configuration $(buildConfiguration) --collect "XPlat Code Coverage"'

- script: |
    dotnet tool install -g dotnet-reportgenerator-globaltool
    reportgenerator -reports:$(Agent.TempDirectory)/**/coverage.cobertura.xml -targetdir:$(Agent.TempDirectory)/coverlet/reports -reporttypes:"Cobertura"
  displayName: Create Code coverage report

- task: PublishCodeCoverageResults@1
  displayName: 'Publish code coverage report'
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: '$(Agent.TempDirectory)/coverlet/reports/Cobertura.xml'
